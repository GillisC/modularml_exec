# Generates docs and the coverage badge, and pushes it to the gh-pages branch


name: "Generate and Upload Documentation to Wiki"

on:
  push:
    branches: [ '*' ]
  schedule:
    - cron: "0 8 * * 1"  # Runs at 08:00 UTC every Monday
  workflow_dispatch:  # Allows us to trigger workflow manually

jobs:
  build-docs-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4

      - name: Install dependencies
        run: make install

      - name: Build Project
        run: make

      - name: Generate Documentation
        run: make docs

      - name: Generate Coverage
        run: make coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-details 
          path: build/coverage_report/coverage_details.html # Contains the coverage of all files

      - name: Extract Coverage Percentage
        run: |
          total_lines=0
          total_covered=0

          skip_headers=1
          while IFS=, read -r filename line_total line_covered line_percent
          do
              if ((skip_headers))
              then
                  ((skip_headers--))
              else
                  total_lines=$((total_lines + line_total))
                  total_covered=$((total_covered + line_covered))
              fi
          done < build/coverage_report/coverage.csv

          echo "Total lines: $total_lines"
          echo "Total covered: $total_covered"
        
          overall_coverage=$(echo "scale=2; $total_covered / $total_lines * 100" | bc)
          echo "Overall line coverage: $overall_coverage%"
          
          echo "COVERAGE=$overall_coverage" >> $GITHUB_ENV 

      - name: Create Coverage Badge
        run: |
          if (( $(echo "$COVERAGE >= 90" | bc -l) )); then
              COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 80" | bc -l) )); then
              COLOR="green"
          elif (( $(echo "$COVERAGE >= 70" | bc -l) )); then
              COLOR="yellowgreen"
          elif (( $(echo "$COVERAGE >= 50" | bc -l) )); then
              COLOR="yellow"
          else
              COLOR="red"
          fi

          curl -o coverage-badge.svg "https://img.shields.io/badge/Coverage-${COVERAGE}%25-${COLOR}"
          
          mv coverage-badge.svg build/docs/html/coverage-badge.svg


      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # Deploy to the gh-pages branch
          folder: build/docs/html  # Path to the generated docs
          target-folder: docs
          clean: true