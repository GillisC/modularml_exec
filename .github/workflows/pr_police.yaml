
name: Issue & Pr Police

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
    issue_pr_police:
        runs-on: ubuntu-latest
    
        steps:
        - name: Checkout repository
          uses: actions/checkout@v3
  
        - name: Check that PR has an assignee.
          run: |
            if [ $(jq '.pull_request.assignees | length' "$GITHUB_EVENT_PATH") -eq 0 ]; then
              echo "No assignee found. Failing the workflow."
              exit 1
            else
              assignee=$(jq -r '.pull_request.assignees[0].login' "$GITHUB_EVENT_PATH")
              echo "Assignee found: $assignee"
            fi

        - name: Check that PR has a label that matches the issue label.
          run: |
            issue_label=$(jq -r '.pull_request.labels[0].name' "$GITHUB_EVENT_PATH")
            pr_label=$(jq -r '.pull_request.labels[0].name' "$GITHUB_EVENT_PATH")
            if [ "$issue_label" != "$pr_label" ]; then
              echo "The issue label is: $issue_label"
              echo "The PR label is: $pr_label"
              echo "PR label does not match the issue label. Failing the workflow."
              exit 1
            else
              echo "PR label matches the issue label."
            fi

        - name: Check that the description contains no bracketed text (e.g. [Feature ...]).
          run: |
            pr_body=$(jq -r '.pull_request.body' "$GITHUB_EVENT_PATH")
            if [ "$(echo "$pr_body" | grep -E '\[.*\]')" ]; then
              ehco "The PR body is: $pr_body"
              echo "The bracketed text is:"
              echo "$pr_body" | grep -E '\[.*\]'
              echo "PR description contains bracketed text. Failing the workflow."
              exit 1
            else
              echo "PR description does not contain bracketed text."
            fi

        - name: Check that PR has correctly formatted title.
          run: |
            pr_title=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")
            if [ ! "$(echo "$pr_title" | grep -E '^\[(Add|Fix|Update|Remove) (Feature|Issue|Invalid|Bug):[^\]]+\]$')" ]; then
              echo "The PR title is: $pr_title"
              ehco "The erroneous part of the title is:"
              echo "$pr_title" | grep -E '^\[(Add|Fix|Update|Remove) (Feature|Issue|Invalid|Bug):[^\]]+\]$'
              echo "PR title is not correctly formatted. Failing the workflow."
              exit 1
            else
              echo "PR title is correctly formatted."
            fi

