#pragma once

#include "nodes/a_node.hpp"
#include "nodes/add.hpp"
#include "nodes/avg_pooling.hpp"
#include "nodes/dropout.hpp"
#include "nodes/elu.hpp"
#include "nodes/flatten.hpp"
#include "nodes/gelu.hpp"
#include "nodes/gemm.hpp"
#include "nodes/leaky_relu.hpp"
#include "nodes/log_softmax.hpp"
#include "nodes/lrn.hpp"
#include "nodes/max_pooling.hpp"
#include "nodes/relu.hpp"
#include "nodes/reshape.hpp"
#include "nodes/sigmoid.hpp"
#include "nodes/swish.hpp"
#include "nodes/tanh.hpp"

#include "backend/a_arithmetic_module.hpp"
#include "backend/a_data_parser.hpp"
#include "backend/a_gemm.hpp"
#include "backend/a_model.hpp"
#include "backend/a_onnx_gemm.hpp"
#include "backend/mml_arithmetic.hpp"
#include "backend/mml_gemm.hpp"
#include "backend/mml_model.hpp"
#include "backend/mml_onnx_gemm.hpp"
#include "backend/mml_parser.hpp"

#include "datastructures/a_tensor.hpp"
#include "datastructures/array_utility.hpp"
#include "datastructures/mml_array.hpp"
#include "datastructures/mml_tensor.hpp"
#include "datastructures/tensor_factory.hpp"
#include "datastructures/tensor_factory_functions.hpp"
#include "datastructures/tensor_operation_functions.hpp"
#include "datastructures/tensor_operations_module.hpp"
#include "datastructures/tensor_utility.hpp"

#include "utility/base64.hpp"
#include "utility/profiler.hpp"

#include <algorithm>
#include <chrono>
#include <cmath>
#include <functional>
#include <initializer_list>
#include <iostream>
#include <memory>
#include <nlohmann/json.hpp>
#include <numeric>
#include <optional>
#include <random>
#include <stdexcept>
#include <string>
#include <tuple>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
#include <variant>
#include <vector>